{"version":3,"sources":["Todoinput.js","Todoing.js","Todocompleted.js","Todolist.js","index.js"],"names":["Todoinput","e","keyCode","target","value","alert","this","props","getTodo","placeholder","type","onKeyDown","Component","Todoing","index","str","deleteBtn","checked","changeTodo","doing","length","map","item","key","onClick","isCompleted","defaultChecked","Todocompleted","completed","Todolist","state","todo","completedTodo","todoArr","JSON","parse","localStorage","getItem","completedArr","setState","setItem","stringify","val","_todo","push","arr","splice","_completedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ad07d8c.chunk.js","sourcesContent":["import React,{Component} from 'react';\n\nclass Todoinput extends Component{\n    getTodo(e){\n        if(13 === e.keyCode){\n            if(e.target.value === ''){\n                alert('请填写此字段！');\n                return;\n            }\n            this.props.getTodo(e.target.value);\n            e.target.value = '';\n        }\n    }\n    render(){\n        return (\n            <div>\n                <h3>Todolist:</h3>\n                <input\n                    placeholder='添加todo'\n                    type='text' \n                    onKeyDown={(e)=>this.getTodo(e)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Todoinput;","import React,{Component} from 'react';\n\nclass Todoing extends Component{\n    deleteBtn(index,str){\n        this.props.deleteBtn(index,str);\n    }\n    isCompleted(index,str,e){\n        let checked = e.target.checked;\n        if(checked === true){\n            this.props.changeTodo(index,checked,str);\n            e.target.checked = false;\n        }\n    }\n    render(){\n        let doing   = this.props.doing;\n        let str     = 'todo';\n\n        return (\n            <div>\n                <h3>正在进行:{doing.length}</h3>\n                <ul>\n                    {\n                        doing.map(\n                            (item,index)=><li key={index}>\n                                <input \n                                    type='checkbox'\n                                    onClick={(e)=>this.isCompleted(index,str,e)}\n                                    defaultChecked={false}\n                                />\n                                    {item}\n                                <button onClick={()=>this.deleteBtn(index,str)}>-</button>\n                            </li>\n                        )\n                    }\n                </ul>    \n            </div>\n        )\n    }\n}\n\nexport default Todoing;","import React,{Component} from 'react';\n\nclass Todocompleted extends Component{\n    deleteBtn(index,str){\n        this.props.deleteBtn(index,str);\n    }\n    isCompleted(index,str,e){\n        let checked = e.target.checked;\n        if(checked === false){\n            this.props.changeTodo(index,checked,str);\n            e.target.checked = true;\n        }\n    }\n    render(){\n        let completed   = this.props.completed;\n        let str         = 'completedTodo';\n\n        return (\n            <div>\n                <h3>已经完成:{completed.length}</h3>   \n                <ul>\n                    {\n                        completed.map(\n                            (item,index)=><li key={index}>\n                                <input \n                                    onClick={(e)=>this.isCompleted(index,str,e)}\n                                    type='checkbox'\n                                    defaultChecked={true}\n                                />\n                                    {item}\n                                <button onClick={()=>this.deleteBtn(index,str)}>-</button>\n                            </li>\n                        )\n                    }\n                </ul>    \n            </div>\n        )\n    }\n}\n\nexport default Todocompleted;","import React,{Component} from 'react';\nimport Todoinput from './Todoinput';\nimport Todoing from './Todoing';\nimport Todocompleted from './Todocompleted';\n\nclass Todolist extends Component{\n    constructor(){\n        super();\n        this.state = {\n            todo: [],\n            completedTodo: []\n        };\n    }\n    \n    componentWillMount(){\n        var todoArr = JSON.parse(localStorage.getItem('todo'));\n        var completedArr = JSON.parse(localStorage.getItem('completed'));\n        if(todoArr){\n            this.setState({\n                todo: todoArr\n            });\n        }\n        if(completedArr){\n            this.setState({\n                completedTodo: completedArr\n            });\n        }\n    }\n    \n    componentDidUpdate(){\n        localStorage.setItem('todo',JSON.stringify(this.state.todo));\n        localStorage.setItem('completed',JSON.stringify(this.state.completedTodo));\n    }\n\n    getTodo(val){\n        let _todo = [...this.state.todo];\n        _todo.push(val);\n        this.setState({\n            todo: _todo\n        });\n    }\n\n    deleteBtn(index,str){\n        let arr = [...this.state[str]];\n        arr.splice(index,1);\n        this.setState({\n            [str]: arr\n        });\n    }\n\n    changeTodo(index,checked,str){\n        if(checked === true){  \n            let item = this.state.todo[index];\n            let _completedTodo = [...this.state.completedTodo];\n            _completedTodo.push(item);\n            this.setState({\n                completedTodo: _completedTodo\n            });\n            this.deleteBtn(index,str);\n        }else if(checked === false){\n            let item = this.state.completedTodo[index];\n            let _todo = [...this.state.todo];\n            _todo.push(item);\n            this.setState({\n                todo: _todo\n            });\n            this.deleteBtn(index,str);\n        }\n    }\n    \n    render(){\n        return (\n            <div>\n                <Todoinput \n                    getTodo={(val)=>this.getTodo(val)}\n                />\n                <Todoing \n                    doing={this.state.todo}\n                    deleteBtn={(index,str)=>this.deleteBtn(index,str)}\n                    changeTodo={(index,checked,str)=>this.changeTodo(index,checked,str)}\n                />\n                <Todocompleted \n                    completed={this.state.completedTodo}\n                    deleteBtn={(index,str)=>this.deleteBtn(index,str)}\n                    changeTodo={(index,checked,str)=>this.changeTodo(index,checked,str)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Todolist;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Todolist from './Todolist';\n\nReactDOM.render(<Todolist/>, document.getElementById('root'));"],"sourceRoot":""}